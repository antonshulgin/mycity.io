{"version":3,"sources":["features/random-body-background/random-body-background.js","features/sections/map/instances.js","features/sections/map/map.js"],"names":["produceRandomBodyBackground","params","shuffle","imageUrls","internals","imagesCount","length","randomImageIndex","Math","round","random","document","body","style","backgroundImage","isObject","isNonEmptyArray","externals","item","isArray","toStringCall","Object","prototype","toString","call","window","addEventListener","randomBodyBackground","exports","instances","title","latLng","url","this","mycity","produceMap","openURL","event","target","options","isNonEmptyString","open","populate","markers","marker","markerOptions","config","idx","len","L","on","click","push","layers","layerGroup","map","addLayer","init","containerId","mapOptions","tilesUrl","tiles","tilesOptions","tileLayer","addTo","isString","trim","cityMarkers","center","maxZoom","minZoom","zoom","zoomControl","scrollWheelZoom","touchZoom","icon","iconUrl","iconSize","iconAnchor","popupAnchor","riseOnHover","attribution","join","reuseTiles"],"mappings":"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","file":"mycity.js","sourcesContent":["(function () {\n\t'use strict';\n\n\tvar imageUrls = [\n\t\t'/features/random-body-background/images/01.jpg',\n\t\t'/features/random-body-background/images/02.jpg',\n\t\t'/features/random-body-background/images/03.jpg',\n\t\t'/features/random-body-background/images/04.jpg',\n\t\t'/features/random-body-background/images/05.jpg',\n\t\t'/features/random-body-background/images/06.jpg',\n\t\t'/features/random-body-background/images/07.jpg',\n\t\t'/features/random-body-background/images/08.jpg',\n\t\t'/features/random-body-background/images/09.jpg',\n\t\t'/features/random-body-background/images/10.jpg',\n\t\t'/features/random-body-background/images/11.jpg',\n\t\t'/features/random-body-background/images/12.jpg'\n\t];\n\n\twindow.addEventListener('load', function () {\n\t\tvar randomBodyBackground = produceRandomBodyBackground({\n\t\t\timageUrls: imageUrls\n\t\t});\n\t\trandomBodyBackground.shuffle();\n\t});\n\n\tfunction produceRandomBodyBackground(params) {\n\t\tif (!isObject(params)) { return; }\n\t\tif (!isNonEmptyArray(params.imageUrls)) { return; }\n\n\t\tvar internals = {};\n\t\tvar externals = {};\n\n\t\tinternals.imageUrls = params.imageUrls;\n\n\t\texternals.shuffle = shuffle;\n\n\t\treturn externals;\n\n\t\tfunction shuffle() {\n\t\t\tvar imageUrls = internals.imageUrls;\n\t\t\tvar imagesCount = imageUrls.length - 1;\n\t\t\tvar randomImageIndex = Math.round(Math.random() * imagesCount);\n\t\t\tdocument.body.style.backgroundImage = 'url(' + imageUrls[randomImageIndex] + ')';\n\t\t}\n\t}\n\n\tfunction isNonEmptyArray(item) {\n\t\tvar isArray = toStringCall(item) === '[object Array]';\n\t\treturn isArray && (item.length > 0);\n\t}\n\n\tfunction isObject(item) {\n\t\treturn toStringCall(item) === '[object Object]';\n\t}\n\n\tfunction toStringCall(item) {\n\t\treturn Object.prototype.toString.call(item);\n\t}\n\n})();\n","(function (exports) {\n\t'use strict';\n\n\texports.instances = [\n\t\t{ \"title\": \"Aberdeen\", \"latLng\": [57.14369, -2.09814] },\n\t\t{ \"title\": \"Adelaide\", \"latLng\": [-34.92866, 138.59863] },\n\t\t{ \"title\": \"Alexandria\", \"latLng\": [31.31129, -92.44514] },\n\t\t{ \"title\": \"Almaty\", \"latLng\": [43.25654, 76.92848] },\n\t\t{ \"title\": \"Aqtöbe\", \"latLng\": [50.27969, 57.20718] },\n\t\t{ \"title\": \"Asheville\", \"latLng\": [35.60095, -82.55402] },\n\t\t{ \"title\": \"Astana\", \"latLng\": [51.1801, 71.44598] },\n\t\t{ \"title\": \"Atlanta\", \"latLng\": [33.749, -84.38798] },\n\t\t{ \"title\": \"Aurora\", \"latLng\": [39.72943, -104.83192] },\n\t\t{ \"title\": \"Austin\", \"latLng\": [30.26715, -97.74306] },\n\t\t{ \"title\": \"Aylesbury\", \"latLng\": [51.81665, -0.81458] },\n\t\t{ \"title\": \"Banbury\", \"latLng\": [52.0602, -1.34029] },\n\t\t{ \"title\": \"Baranovichi\", \"latLng\": [53.13, 26.01], \"url\": \"http://baranovichi.mycity.io\" },\n\t\t{ \"title\": \"Barnaul\", \"latLng\": [53.34, 83.77], \"url\": \"http://barnaul.mycity.io\" },\n\t\t{ \"title\": \"Beltsville\", \"latLng\": [39.03483, -76.90747] },\n\t\t{ \"title\": \"Berdsk\", \"latLng\": [54.75, 83.09], \"url\": \"http://berdsk.mycity.io\" },\n\t\t{ \"title\": \"Bethesda\", \"latLng\": [38.98067, -77.10026] },\n\t\t{ \"title\": \"Bethlehem\", \"latLng\": [40.62593, -75.37046] },\n\t\t{ \"title\": \"Bismarck\", \"latLng\": [46.80833, -100.78374] },\n\t\t{ \"title\": \"Bloomfield\", \"latLng\": [40.80677, -74.18542] },\n\t\t{ \"title\": \"Borehamwood\", \"latLng\": [51.65468, -0.27762] },\n\t\t{ \"title\": \"Boston\", \"latLng\": [42.35843, -71.05977] },\n\t\t{ \"title\": \"Brisbane\", \"latLng\": [-27.46794, 153.02809] },\n\t\t{ \"title\": \"Bristol\", \"latLng\": [51.45523, -2.59665] },\n\t\t{ \"title\": \"Calgary\", \"latLng\": [51.05011, -114.08529] },\n\t\t{ \"title\": \"Chelmsford\", \"latLng\": [51.73575, 0.46958] },\n\t\t{ \"title\": \"Chesham\", \"latLng\": [51.7, -0.6] },\n\t\t{ \"title\": \"Chester\", \"latLng\": [37.35682, -77.44165] },\n\t\t{ \"title\": \"Chicago\", \"latLng\": [41.85003, -87.65005] },\n\t\t{ \"title\": \"Colchester\", \"latLng\": [51.88921, 0.90421] },\n\t\t{ \"title\": \"Coos Bay\", \"latLng\": [43.3665, -124.21789] },\n\t\t{ \"title\": \"Cottonwood Heights\", \"latLng\": [40.61967, -111.81021] },\n\t\t{ \"title\": \"Dallas\", \"latLng\": [32.78306, -96.80667] },\n\t\t{ \"title\": \"Deerfield Beach\", \"latLng\": [26.31841, -80.09977] },\n\t\t{ \"title\": \"Denver\", \"latLng\": [39.73915, -104.9847] },\n\t\t{ \"title\": \"Detroit\", \"latLng\": [42.33143, -83.04575] },\n\t\t{ \"title\": \"Dmitrov\", \"latLng\": [56.34485, 37.52041] },\n\t\t{ \"title\": \"East Kilbride\", \"latLng\": [55.76412, -4.17669] },\n\t\t{ \"title\": \"Eau Claire\", \"latLng\": [44.81135, -91.49849] },\n\t\t{ \"title\": \"Edinburgh\", \"latLng\": [55.95206, -3.19648] },\n\t\t{ \"title\": \"Edmonton\", \"latLng\": [53.55014, -113.46871] },\n\t\t{ \"title\": \"Elmira\", \"latLng\": [42.0898, -76.80773] },\n\t\t{ \"title\": \"Espoo\", \"latLng\": [60.20, 24.65], \"url\": \"http://suurpelto.mycity.io\" },\n\t\t{ \"title\": \"Everett\", \"latLng\": [47.97898, -122.20208] },\n\t\t{ \"title\": \"Farnham\", \"latLng\": [51.21433, -0.79587] },\n\t\t{ \"title\": \"Flagstaff\", \"latLng\": [35.19807, -111.65127] },\n\t\t{ \"title\": \"Glasgow\", \"latLng\": [55.86515, -4.25763] },\n\t\t{ \"title\": \"Glendale\", \"latLng\": [34.14251, -118.25508] },\n\t\t{ \"title\": \"Grand Rapids\", \"latLng\": [42.96336, -85.66809] },\n\t\t{ \"title\": \"Helsinki\", \"latLng\": [60.17, 24.92], \"url\": \"http://helsinki.mycity.io\" },\n\t\t{ \"title\": \"Honolulu\", \"latLng\": [21.30694, -157.85833] },\n\t\t{ \"title\": \"Houston\", \"latLng\": [29.76328, -95.36327] },\n\t\t{ \"title\": \"Izhevsk\", \"latLng\": [56.84, 53.20], \"url\": \"http://izhevsk.mycity.io\" },\n\t\t{ \"title\": \"Kalamazoo\", \"latLng\": [42.29171, -85.58723] },\n\t\t{ \"title\": \"Kansas City\", \"latLng\": [39.09973, -94.57857] },\n\t\t{ \"title\": \"Kennesaw\", \"latLng\": [34.02343, -84.61549] },\n\t\t{ \"title\": \"Kirkenes\", \"latLng\": [69.72, 30.04], \"url\": \"http://kirkenes.mycity.io\" },\n\t\t{ \"title\": \"Kirovo-Chepetsk\", \"latLng\": [58.55386, 50.03986] },\n\t\t{ \"title\": \"Knoxville\", \"latLng\": [35.96064, -83.92074] },\n\t\t{ \"title\": \"Krasnoyarsk\", \"latLng\": [56.01839, 92.86717] },\n\t\t{ \"title\": \"Kristiansand\", \"latLng\": [58.14671, 7.9956] },\n\t\t{ \"title\": \"Kurgan\", \"latLng\": [55.44, 65.34], \"url\": \"http://kurgan.mycity.io\" },\n\t\t{ \"title\": \"Lafayette\", \"latLng\": [37.88576, -122.11802] },\n\t\t{ \"title\": \"Lake Worth\", \"latLng\": [26.6159, -80.05699] },\n\t\t{ \"title\": \"Lappeenranta\", \"latLng\": [61.05, 28.18], \"url\": \"http://lappeenranta.mycity.io\" },\n\t\t{ \"title\": \"Las Vegas\", \"latLng\": [36.17497, -115.13722] },\n\t\t{ \"title\": \"Lawrence\", \"latLng\": [42.70704, -71.16311] },\n\t\t{ \"title\": \"Leesburg\", \"latLng\": [39.11566, -77.5636] },\n\t\t{ \"title\": \"Leipzig\", \"latLng\": [51.34, 12.25], \"url\": \"http://leipzig.mycity.io\" },\n\t\t{ \"title\": \"Little Rock\", \"latLng\": [34.74648, -92.28959] },\n\t\t{ \"title\": \"London\", \"latLng\": [51.50853, -0.12574] },\n\t\t{ \"title\": \"Londonderry County Borough\", \"latLng\": [54.99721, -7.30917] },\n\t\t{ \"title\": \"Long Beach\", \"latLng\": [33.76696, -118.18923] },\n\t\t{ \"title\": \"Los Angeles\", \"latLng\": [34.05223, -118.24368] },\n\t\t{ \"title\": \"Loveland\", \"latLng\": [40.39776, -105.07498] },\n\t\t{ \"title\": \"Mackay\", \"latLng\": [-21.15345, 149.16554] },\n\t\t{ \"title\": \"Madison\", \"latLng\": [43.07305, -89.40123] },\n\t\t{ \"title\": \"Magnitogorsk\", \"latLng\": [53.41861, 59.04722] },\n\t\t{ \"title\": \"Mansfield\", \"latLng\": [32.56319, -97.14168] },\n\t\t{ \"title\": \"Marietta\", \"latLng\": [33.9526, -84.54993] },\n\t\t{ \"title\": \"Melbourne\", \"latLng\": [-37.814, 144.96332] },\n\t\t{ \"title\": \"Miami Beach\", \"latLng\": [25.79065, -80.13005] },\n\t\t{ \"title\": \"Miami\", \"latLng\": [25.77427, -80.19366] },\n\t\t{ \"title\": \"Miass\", \"latLng\": [55.045, 60.10833] },\n\t\t{ \"title\": \"Michigan City\", \"latLng\": [41.70754, -86.89503] },\n\t\t{ \"title\": \"Middletown\", \"latLng\": [41.44593, -74.42293] },\n\t\t{ \"title\": \"Minneapolis\", \"latLng\": [44.97997, -93.26384] },\n\t\t{ \"title\": \"Moscow\", \"latLng\": [46.73239, -117.00017] },\n\t\t{ \"title\": \"Motherwell\", \"latLng\": [55.78924, -3.99187] },\n\t\t{ \"title\": \"Murmansk\", \"latLng\": [68.97, 33.07], \"url\": \"http://murmansk.mycity.io\" },\n\t\t{ \"title\": \"Mykolayiv\", \"latLng\": [46.96591, 31.9974] },\n\t\t{ \"title\": \"Myrtle Beach\", \"latLng\": [33.68906, -78.88669] },\n\t\t{ \"title\": \"Nashville\", \"latLng\": [36.16589, -86.78444] },\n\t\t{ \"title\": \"New Brunswick\", \"latLng\": [40.48622, -74.45182] },\n\t\t{ \"title\": \"New York City\", \"latLng\": [40.71427, -74.00597] },\n\t\t{ \"title\": \"Nikel\", \"latLng\": [69.40, 30.20], \"url\": \"http://nikel.mycity.io\" },\n\t\t{ \"title\": \"Nizhny Novgorod\", \"latLng\": [56.31, 44.00], \"url\": \"http://nizhniy-novgorod.mycity.io\" },\n\t\t{ \"title\": \"Norwalk\", \"latLng\": [33.90224, -118.08173] },\n\t\t{ \"title\": \"Novosibirsk\", \"latLng\": [55.02, 82.94], \"url\": \"http://novosibirsk.mycity.io\" },\n\t\t{ \"title\": \"Oakland\", \"latLng\": [37.80437, -122.2708] },\n\t\t{ \"title\": \"Oakton\", \"latLng\": [38.88095, -77.30082] },\n\t\t{ \"title\": \"Oklahoma City\", \"latLng\": [35.46756, -97.51643] },\n\t\t{ \"title\": \"Orange\", \"latLng\": [-33.28397, 149.10018] },\n\t\t{ \"title\": \"Orange\", \"latLng\": [33.78779, -117.85311] },\n\t\t{ \"title\": \"Orlando\", \"latLng\": [28.53834, -81.37924] },\n\t\t{ \"title\": \"Oshkosh\", \"latLng\": [44.02471, -88.54261] },\n\t\t{ \"title\": \"Palo Alto\", \"latLng\": [37.44188, -122.14302] },\n\t\t{ \"title\": \"Pensacola\", \"latLng\": [30.42131, -87.21691] },\n\t\t{ \"title\": \"Perth\", \"latLng\": [-31.95224, 115.8614] },\n\t\t{ \"title\": \"Petrozavodsk\", \"latLng\": [61.78, 34.34], \"url\": \"http://petrozavodsk.mycity.io\" },\n\t\t{ \"title\": \"Philadelphia\", \"latLng\": [39.95234, -75.16379] },\n\t\t{ \"title\": \"Podol’sk\", \"latLng\": [55.42418, 37.55472] },\n\t\t{ \"title\": \"Portland\", \"latLng\": [45.54, -122.79], \"url\": \"http://portland.mycity.io\" },\n\t\t{ \"title\": \"Poughkeepsie\", \"latLng\": [41.70037, -73.92097] },\n\t\t{ \"title\": \"Poznań\", \"latLng\": [52.40692, 16.92993] },\n\t\t{ \"title\": \"Providence\", \"latLng\": [41.82399, -71.41283] },\n\t\t{ \"title\": \"Provo\", \"latLng\": [40.23384, -111.65853] },\n\t\t{ \"title\": \"Richmond\", \"latLng\": [37.55376, -77.46026] },\n\t\t{ \"title\": \"Riga\", \"latLng\": [56.946, 24.10589] },\n\t\t{ \"title\": \"Saint Petersburg\", \"latLng\": [27.77086, -82.67927] },\n\t\t{ \"title\": \"Salekhard\", \"latLng\": [66.53, 66.60194] },\n\t\t{ \"title\": \"Salford\", \"latLng\": [53.48771, -2.29042] },\n\t\t{ \"title\": \"San Diego\", \"latLng\": [32.71533, -117.15726] },\n\t\t{ \"title\": \"San Francisco\", \"latLng\": [37.75, -122.47], \"url\": \"http://sf.mycity.io\" },\n\t\t{ \"title\": \"San Jose\", \"latLng\": [37.33939, -121.89496] },\n\t\t{ \"title\": \"San Leandro\", \"latLng\": [37.72493, -122.15608] },\n\t\t{ \"title\": \"Sanford\", \"latLng\": [35.47988, -79.1803] },\n\t\t{ \"title\": \"Santa Clarita\", \"latLng\": [34.39166, -118.54259] },\n\t\t{ \"title\": \"Santa Fe\", \"latLng\": [35.68698, -105.9378] },\n\t\t{ \"title\": \"Sarasota\", \"latLng\": [27.33643, -82.53065] },\n\t\t{ \"title\": \"Satka\", \"latLng\": [55.0425, 59.04] },\n\t\t{ \"title\": \"Savannah\", \"latLng\": [32.08354, -81.09983] },\n\t\t{ \"title\": \"Seattle\", \"latLng\": [47.60621, -122.33207] },\n\t\t{ \"title\": \"Severodvinsk\", \"latLng\": [64.56, 39.83], \"url\": \"http://severodvinsk.mycity.io\" },\n\t\t{ \"title\": \"Sibay\", \"latLng\": [52.71806, 58.66583] },\n\t\t{ \"title\": \"St. Louis\", \"latLng\": [38.62727, -90.19789] },\n\t\t{ \"title\": \"Staten Island\", \"latLng\": [40.56233, -74.13986] },\n\t\t{ \"title\": \"Suurpelto\", \"latLng\": [60.18, 24.74], \"url\": \"http://suurpelto.mycity.io\" },\n\t\t{ \"title\": \"Suwałki\", \"latLng\": [54.11, 22.93], \"url\": \"http://suwalki.mycity.io\" },\n\t\t{ \"title\": \"Sydney\", \"latLng\": [-33.86785, 151.20732] },\n\t\t{ \"title\": \"Tomsk\", \"latLng\": [56.49, 84.97], \"url\": \"http://tomsk.mycity.io\" },\n\t\t{ \"title\": \"Topeka\", \"latLng\": [39.04833, -95.67804] },\n\t\t{ \"title\": \"Toronto\", \"latLng\": [43.70011, -79.4163] },\n\t\t{ \"title\": \"Tromsø\", \"latLng\": [69.66, 18.97], \"url\": \"http://tromso.mycity.io\" },\n\t\t{ \"title\": \"Valkeakoski\", \"latLng\": [61.26, 24.03], \"url\": \"http://valkeakoski.mycity.io\" },\n\t\t{ \"title\": \"Vancouver\", \"latLng\": [49.24, -123.11], \"url\": \"http://vancouver.mycity.io\" },\n\t\t{ \"title\": \"Vienna\", \"latLng\": [38.90122, -77.26526] },\n\t\t{ \"title\": \"Vladivostok\", \"latLng\": [43.17, 131.89], \"url\": \"http://vladivostok.mycity.io\" },\n\t\t{ \"title\": \"Volgograd\", \"latLng\": [48.71, 44.50], \"url\": \"http://volgograd.mycity.io\" },\n\t\t{ \"title\": \"Voronezh\", \"latLng\": [51.66, 39.20], \"url\": \"http://voronesh.mycity.io\" },\n\t\t{ \"title\": \"Washington,  D.C.\", \"latLng\": [38.89511, -77.03637] },\n\t\t{ \"title\": \"Wellington\", \"latLng\": [-41.28664, 174.77557] },\n\t\t{ \"title\": \"West Palm Beach\", \"latLng\": [26.71534, -80.05337] },\n\t\t{ \"title\": \"West Valley City\", \"latLng\": [40.69161, -112.00105] },\n\t\t{ \"title\": \"Whangarei\", \"latLng\": [-35.73167, 174.32391] },\n\t\t{ \"title\": \"Yekaterinburg\", \"latLng\": [56.8519, 60.6122] },\n\t\t{ \"title\": \"Yoshkar-Ola\", \"latLng\": [56.63, 47.89], \"url\": \"http://yoshkar-ola.mycity.io\" },\n\t];\n\n})(this.mycity || (this.mycity = {}));\n","(function () {\n\t/* global L */\n\t/* global mycity */\n\t'use strict';\n\n\tvar cityMarkers = mycity.instances;\n\tvar config = {};\n\n\tconfig.map = {\n\t\toptions: {\n\t\t\tcenter: [65, 25],\n\t\t\tmaxZoom: 10,\n\t\t\tminZoom: 2,\n\t\t\tzoom: 3,\n\t\t\tzoomControl: false,\n\t\t\tscrollWheelZoom: false,\n\t\t\ttouchZoom: false\n\t\t}\n\t};\n\n\tconfig.marker = {\n\t\toptions: {\n\t\t\ticon: L.icon({\n\t\t\t\ticonUrl: './features/sections/map/assets/icons/22.marker.png',\n\t\t\t\ticonSize: [22, 22],\n\t\t\t\ticonAnchor: [11, 11],\n\t\t\t\tpopupAnchor: [11, 11]\n\t\t\t}),\n\t\t\triseOnHover: true\n\t\t}\n\t};\n\n\tconfig.tiles = {\n\t\turl: 'http://{s}.tiles.mapbox.com/v3/antonshulgin.j24l2ega/{z}/{x}/{y}.png',\n\t\toptions: {\n\t\t\tattribution: [\n\t\t\t\t'Map data © <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors,',\n\t\t\t\t'<a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>,',\n\t\t\t\t'Imagery © <a href=\"http://mapbox.com\">Mapbox</a>'\n\t\t\t].join(' '),\n\t\t\treuseTiles: true\n\t\t}\n\t};\n\n\twindow.addEventListener('load', function () {\n\t\tvar map = produceMap({\n\t\t\tconfig: config,\n\t\t\tcontainerId: 'map'\n\t\t});\n\n\t\tif (!isObject(map)) { return; }\n\n\t\tmap.populate(cityMarkers);\n\t});\n\n\tfunction produceMap(params) {\n\t\tif (!isObject(params)) { return; }\n\t\tif (!isObject(params.config)) { return; }\n\t\tif (!isNonEmptyString(params.containerId)) { return; }\n\n\t\tvar internals = {};\n\t\tvar externals = {};\n\n\t\tinternals.config = params.config;\n\t\tinternals.containerId = params.containerId;\n\n\t\texternals.populate = populate;\n\n\t\tinit();\n\n\t\treturn externals;\n\n\t\tfunction openURL(event) {\n\t\t\tvar url = event.target.options.url;\n\t\t\tif (isNonEmptyString(url)) {\n\t\t\t\twindow.open(event.target.options.url);\n\t\t\t}\n\t\t}\n\n\t\tfunction populate(markers) {\n\t\t\tif (!isNonEmptyArray(markers)) { return; }\n\n\t\t\tvar marker;\n\t\t\tvar markerOptions = internals.config.marker.options;\n\t\t\tvar options;\n\n\t\t\tfor (var idx = 0, len = markers.length; idx < len; idx += 1) {\n\t\t\t\toptions = markerOptions;\n\t\t\t\toptions.title = markers[idx].title;\n\t\t\t\toptions.url = markers[idx].url;\n\t\t\t\tmarker = L.marker(markers[idx].latLng, options);\n\t\t\t\tmarker.on({ click: openURL });\n\t\t\t\tinternals.markers.push(marker);\n\t\t\t}\n\t\t\tinternals.layers = L.layerGroup(internals.markers);\n\t\t\tinternals.map.addLayer(internals.layers);\n\t\t}\n\n\t\tfunction init() {\n\t\t\tvar containerId = internals.containerId;\n\t\t\tvar mapOptions = internals.config.map.options;\n\t\t\tvar tilesUrl = internals.config.tiles.url;\n\t\t\tvar tilesOptions = internals.config.tiles.options;\n\n\t\t\tinternals.map = L.map(containerId, mapOptions);\n\t\t\tinternals.tiles = L.tileLayer(tilesUrl, tilesOptions);\n\t\t\tinternals.layers = {};\n\t\t\tinternals.markers = [];\n\t\t\tinternals.tiles.addTo(internals.map);\n\t\t}\n\t}\n\n\tfunction isNonEmptyString(item) {\n\t\tvar isString = toStringCall(item) === '[object String]';\n\t\treturn isString && (item.trim().length > 0);\n\t}\n\n\tfunction isNonEmptyArray(item) {\n\t\tvar isArray = toStringCall(item) === '[object Array]';\n\t\treturn isArray && (item.length > 0);\n\t}\n\n\tfunction isObject(item) {\n\t\treturn toStringCall(item) === '[object Object]';\n\t}\n\n\tfunction toStringCall(item) {\n\t\treturn Object.prototype.toString.call(item);\n\t}\n\n})();\n"]}